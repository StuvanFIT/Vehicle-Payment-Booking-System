//Name:Steven Kaing
//ID: 33155666
//Last Modified: 10/04/2024

package edu.monash.fit2099.vehicles;

import edu.monash.fit2099.actions.AddBookingAction;
import edu.monash.fit2099.interfaces.Action;
import edu.monash.fit2099.interfaces.ActionCapable;
import edu.monash.fit2099.bookings.Booking;

import java.util.ArrayList;
import java.util.List;
//In no situation am I instantiating Vehicle instance.
/**
 * <h1>Vehicle<h1>
 * Vehicle class represents the vehicle being booked
 * @author Steven Kaing
 * @version 1.0.0
 * @since 10/04/2024
 */
public abstract class Vehicle implements ActionCapable {

    /**
     *This class provides a blueprint of the vehicle class, including its brand, year model and price tag.
     */

    //Private Attributes:
    private String brand;
    private int year;
    private double price;
    private Booking booking = new Booking(this);

    /**
     * Constructor method
     * @param brand the brand of the vehicle
     * @param year the year model of the vehicle
     * @param price the cost of the vehicle
     */
    public Vehicle(String brand, int year, double price){
        this.brand = brand; //vehicle brand
        this.year = year; //Model Year
        this.price = price; //Price of vehicle
    }

    //Vehicle getter methods do not need defensive copying as price, year are primitive data types (single values) so returning them directly provides a copy of their values already

    /**
     * Returns the price of the vehicle
     * @return the price of the vehicle
     */
    public double getPrice(){
        return this.price;
    }


    /**
     * Returns the brand of the vehicle
     * @return the brand of the vehicle
     */
    public String getBrand(){ return new String(this.brand);}


    /**
     * Returns the year model of the vehicle
     * @return the year of the vehicle
     */
    public int getYear(){return this.year;}


    /**
     * A toString method that textually represents the vehicle
     * @return a String representing the vehicle
     */
    @Override
    public String toString(){
        //Return string representation of the standard vehicle class:
        return String.format(" Brand: %s | Year: %d | Price: $%.2f per day | ",brand,year,price);
    }

    /**
     * We want to explicitly indicate the list of actions that can be generated by each particular class.
     * @return a list of actions that the vehicle class can peform
     */
    @Override
    public List<Action> allowableActions(){
        List<Action> actions = new ArrayList<Action>();
        actions.add(new AddBookingAction(booking));
        return actions;
    }






}
